# Домашнее задание к занятию «Базы данных»

<!--

### Инструкция по выполнению домашнего задания

1. Сделайте fork [репозитория c шаблоном решения](https://github.com/netology-code/sys-pattern-homework) к себе в Github и переименуйте его по названию или номеру занятия, например, https://github.com/имя-вашего-репозитория/gitlab-hw или https://github.com/имя-вашего-репозитория/8-03-hw).
2. Выполните клонирование этого репозитория к себе на ПК с помощью команды `git clone`.
3. Выполните домашнее задание и заполните у себя локально этот файл README.md:
   - впишите вверху название занятия и ваши фамилию и имя;
   - в каждом задании добавьте решение в требуемом виде: текст/код/скриншоты/ссылка;
   - для корректного добавления скриншотов воспользуйтесь инструкцией [«Как вставить скриншот в шаблон с решением»](https://github.com/netology-code/sys-pattern-homework/blob/main/screen-instruction.md);
   - при оформлении используйте возможности языка разметки md. Коротко об этом можно посмотреть в [инструкции по MarkDown](https://github.com/netology-code/sys-pattern-homework/blob/main/md-instruction.md).
4. После завершения работы над домашним заданием сделайте коммит (`git commit -m "comment"`) и отправьте его на Github (`git push origin`).
5. Для проверки домашнего задания преподавателем в личном кабинете прикрепите и отправьте ссылку на решение в виде md-файла в вашем Github.
6. Любые вопросы задавайте в чате учебной группы и/или в разделе «Вопросы по заданию» в личном кабинете.

Желаем успехов в выполнении домашнего задания.

-->
---
### Легенда

Заказчик передал вам [файл в формате Excel](https://github.com/netology-code/sdb-homeworks/blob/main/resources/hw-12-1.xlsx), в котором сформирован отчёт. 

На основе этого отчёта нужно выполнить следующие задания.

### Задание 1

Опишите не менее семи таблиц, из которых состоит база данных:

- какие данные хранятся в этих таблицах;
- какой тип данных у столбцов в этих таблицах, если данные хранятся в PostgreSQL.

Приведите решение к следующему виду:

Сотрудники (

- идентификатор, первичный ключ, serial,
- фамилия varchar(50),
- ...
- идентификатор структурного подразделения, внешний ключ, integer).


### Выполнение задания

```
employee (
- emp_id, первичный ключ, serial
- user_id, внешний ключ (user_id)
- date_from, date
- department_id, smallint, внешний ключ department (dep_id)
- position_id, smallint, внешний ключ position (pos_id)
- branch_id, smallint, внешний ключ branch (branch_id)
- current_project_id, smallint, внешний ключ projects (project_id)
- pos_salary, money, внешний ключ position (salary)
)
```

```
users (
- user_id, первичный ключ, serial
- fio_1_familyname, varchar(50)
- fio_2_firstname, varchar(50)
- fio_3_midlename, varchar(50)
)
```

```
department (
- dep_id, primary_key, serial
- dep_name, varchar(50)
- dep_type, smallint, внешний ключ deptypes (deptype_id)
)
```

```
deptypes (
- deptype_id, первичный ключ, serial
- deptype_name, varchar(20)
)
```

```
position (
- pos_id, первичный ключ, serial
- position_name, varchar(50)
- salary, money
- department_id, varchar(50), внешний ключ department (dep_id)
)
```

```
branch (
- branch_id, первичный ключ, serial
- address_id, smallint, внешний ключ addresses (address_id)
- branch_endpoint, varchar (100)
- branch_regoin_id, smallint, внешний ключ addresses (address_area)
)
```

```
addresses(
- address_id, первичный ключ, serial
- address_city, varchar(50)
- address_street, varchar(100)
- address_building, varchar (30)
)
```

```
region(
- ro_id, 


```
projects (
- project_id, serial
- project_name, varchar(100)
- emp_id
)
```

![](./Screenshot_257.png)

<!--

## Дополнительные задания (со звёздочкой*)
Эти задания дополнительные, то есть не обязательные к выполнению, и никак не повлияют на получение вами зачёта по этому домашнему заданию. Вы можете их выполнить, если хотите глубже шире разобраться в материале.


### Задание 2*

Перечислите, какие, на ваш взгляд, в этой денормализованной таблице встречаются функциональные зависимости и какие правила вывода нужно применить, чтобы нормализовать данные.

-->
